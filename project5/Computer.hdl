// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    // Put your code here:

    // input instruction from instruction memeory and data from data memory, output result 
    // of instruction operation, data memory address to store output, selector for whether 
    // to write to data memeory, and instruction memeory address of next instruction
    CPU(inM=dataFromMemory, instruction=nextIntruction, reset=reset, 
        outM=dataFromCPU, writeM=writeToMemory, addressM=memoryAddress, pc=nextIntructionAddress);
    
    // input CPU output, save input at specified address if load bit is asserted, and output contents
    Memory(in=dataFromCPU, load=writeToMemory, address=memoryAddress, out=dataFromMemory);

    // input address of next intruction, output next instruction
    ROM32K(address=nextIntructionAddress, out=nextIntruction);
}
